VITE_SERVER_API_URL=http://localhost:8443/api


# <template>
#   <div class="container">
#     <div class="scroll-container">
#       <q-infinite-scroll
#         @load="onLoadRef"
#         :offset="100"
#         :scroll-target="scrollTargetRef"
#       >
#         <TestList :items="testList"></TestList>
#       </q-infinite-scroll>
#     </div>
#   </div>
# </template>

# <script setup>
# import TestList from "src/components/Test/TestList.vue";

# import { onMounted, ref } from "vue";
# import { storeToRefs } from "pinia";
# import { useTestStore } from "@/stores/useTestStore";

# const testStore = useTestStore();
# const { testList } = storeToRefs(testStore);

# onMounted(() => {
#   console.log("onMounted 호출");
#   testStore.getTestList({ pageNumber: 0 }); // API 호출
# });
# const scrollTargetRef = ref(null);
# const pageNumber = ref(0);

# const onLoadRef = (pageNumber) => {
#   pageNumber.value++;
#   testStore.getTestList({ pageNumber }); // API 호출
# };
# </script>

# <style lang="scss" scoped>
# .scroll-container {
#   flex: 1; /* 남은 공간을 모두 차지하도록 설정 */
#   overflow: auto; /* 스크롤 활성화 */
# }

# .container {
#   overflow: none; /* 스크롤 활성화 */
# }
# </style>


# <template>
#   <div class="container">
#     <div class="scroll-container" ref="scrollTargetRef">
#       <q-infinite-scroll
#         @load="onLoadRef"
#         :offset="50"
#         :scroll-target="scrollTargetRef"
#       >
#         <TestList :items="testStore.testList"></TestList>

#         <template v-slot:no-more>
#           <div class="q-mt-md">
#             <p>No more items</p>
#           </div>
#         </template>
#       </q-infinite-scroll>
#     </div>
#   </div>
# </template>

# <script setup>
# import TestList from "src/components/Test/TestList.vue";
# import { onMounted, ref } from "vue";
# import { useTestStore } from "@/stores/useTestStore";

# const testStore = useTestStore();

# // DOM 요소 참조
# const scrollTargetRef = ref(null);
# const pageNumber = ref(0);
# // 컴포넌트 마운트 시 첫 번째 페이지 데이터 로드
# // onMounted(async () => {
# //   console.log("onMounted 호출");

# //   console.log(scrollTargetRef.value);
# //   await testStore.getTestList({ pageNumber: 0 });
# // });

# // 무한 스크롤 시 데이터 로드
# const onLoadRef = (index, done) => {
#   console.log("onLoadRef : 실행");
#   console.log(pageNumber.value);
#   console.log(testStore.testListhasNext);

#   if (!testStore.testListhasNext) {
#     console.log("더이상 데이터가 없음");
#     stop();
#   }
#   testStore.getTestList({ pageNumber: pageNumber.value }).then(() => {
#     // 모든 데이터를 불러왔을 경우 done() 호출하여 무한 스크롤 종료
#     //done()을 호출하게 된다면 무한 스크롤이 더이상 실해되지않다
#     //testListhasNext (true : 다음 데이터가 더 있다 false : 더이상 없다 )
#     done();
#   });

#   pageNumber.value++; // 페이지 번호 증가
# };
# </script>

# <style lang="scss" scoped>
# .scroll-container {
#   flex: 1;
#   overflow: auto;
#   height: 100vh; /* 전체 뷰포트 높이만큼 설정 */
# }
# .container {
#   height: 100vh; /* 부모 요소가 화면 전체를 차지 */
#   display: flex;
#   flex-direction: column;
# }
# </style>
